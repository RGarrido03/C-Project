% Canvas
define canvas Canvas1 "Example 1" (200 / 2, 100*1);
define canvas Canvas2 "Example 2"; % Default size
set Canvas1;
Canvas1 background pink;

% Variable initialization
int a = 10, b = 1;
real c = 1.0;
string d = "hi " + "honey";
bool e = b == c;
bool f = c < a;

% Casts
int g = int("10");
string h = string(10);

% Pen
define pen PenType1 {
   color = green;
   position = ((10+2)-2, a);
   orientation = (a + 35)ยบ;
   thickness = a;
   pressure = -1 / 1;
};

pen p1 = new PenType1;
p1 -> stdout;

% Stdin
a = int(stdin stdin "Choose the name for your stdin: ");

%
% MEDIUM
%

% Pipeline
p1 forward 10 pause 10000 left 10 forward 20;

% Arrow props
p1 <- position (100, 100);
p1 <- color red;

% If
if (!e) {
    "This shouldn't be printed" -> stdout;
} else if (e) {
    "Let's gooo" -> stdout;
} else {
    "This shouldn't be printed" -> stdout;
};

% While
string s;
while (s != "y" and s != "Y") {
    s = stdin "Continue? y/n: ";
};

% Until
until (s == "n" or s == "N") {
    s = stdin "Not continue? y/n: ";
};

% For
for (int i = 0; i < 5; i = i + 1) {
    i -> stderr;
};

% Consts
PI -> stdout;

% Add point to pen
p1 = p1 + (20, 20);

%
% ADVANCED
%

% Functions
def int function_no_args() {
    "hi from a no-arg function" -> stdout;
    return 0;
};

def string function_with_args(string a) {
    a -> stdout;
    return a;
};

function_no_args();
string z = function_with_args("ola");

% Text write
p1 write "pdraw-t02", 16;

% Increment/decrement
a++;
a -> stdout;
a--;
a -> stdout;

set Canvas2;

% Execute
p1 <- execute "../../examples/self_made/test_ipdraw.ipdraw";

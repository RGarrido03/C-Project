group pdraw;
import "Elements.stg"
import "Class.stg"

main(statements, classes) ::= <<
from abc import ABC, abstractmethod
import time
import sys
import turtle
import math
from lib import Pen

class DefaultPen(Pen):
    def __init__(self) -> None:
        super().__init__()


<classes; separator="\n\n">


<if(statements)>
<statements>
<else>
pass
<endif>

turtle.done()

>>

other(text) ::= "<text>"

statement(something) ::=<<
<if(something)>
<something>
<endif>
>>

instruction(variable, action, value) ::= <<
<variable>.<action>(<value>)

>>

assignment(assignVar, assignPen, reassignVar, variable, object, expression, type) ::= <<
<if(assignVar)>
<variable>: <type> = <expression>
<elseif(assignPen)>
<object>
<elseif(reassignVar)>
<variable> = <expression>
<endif>

>>


// Medium Level
cast(Type, expression) ::= <<
<Type>(<expression>)

>>

pause(INT) ::= <<
time.sleep(<INT>/1000)

>>

print(expression, stdErr) ::= <<
print(<expression><if(stdErr)>, file=sys.stderr<endif>)

>>

input(text) ::= "input(<text>)"

execute(variable, String) ::= <<
    <variable> = eval(<String>)
    
>>

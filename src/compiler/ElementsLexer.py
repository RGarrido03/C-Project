# Generated from Elements.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,32,251,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,1,0,1,
        0,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,
        8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,12,
        1,12,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,
        1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,
        1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,
        1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
        1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,3,20,
        162,8,20,1,21,4,21,165,8,21,11,21,12,21,166,1,22,4,22,170,8,22,11,
        22,12,22,171,1,22,1,22,4,22,176,8,22,11,22,12,22,177,1,23,1,23,1,
        23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,3,24,193,8,
        24,1,25,4,25,196,8,25,11,25,12,25,197,1,26,1,26,5,26,202,8,26,10,
        26,12,26,205,9,26,1,27,1,27,4,27,209,8,27,11,27,12,27,210,1,28,1,
        28,1,28,1,29,1,29,1,29,5,29,219,8,29,10,29,12,29,222,9,29,1,29,1,
        29,1,29,1,29,5,29,228,8,29,10,29,12,29,231,9,29,1,29,3,29,234,8,
        29,1,30,1,30,5,30,238,8,30,10,30,12,30,241,9,30,1,30,1,30,1,31,4,
        31,246,8,31,11,31,12,31,247,1,31,1,31,2,220,229,0,32,1,1,3,2,5,3,
        7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
        31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,
        53,27,55,28,57,29,59,30,61,31,63,32,1,0,6,1,0,48,57,2,0,65,90,97,
        122,4,0,48,57,65,90,95,95,97,122,3,0,48,57,65,70,97,102,2,0,10,10,
        13,13,3,0,9,10,13,13,32,32,268,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,
        0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
        0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,
        0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,
        0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,
        0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,
        0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,1,65,1,0,0,0,
        3,67,1,0,0,0,5,70,1,0,0,0,7,72,1,0,0,0,9,74,1,0,0,0,11,76,1,0,0,
        0,13,78,1,0,0,0,15,80,1,0,0,0,17,82,1,0,0,0,19,84,1,0,0,0,21,90,
        1,0,0,0,23,92,1,0,0,0,25,94,1,0,0,0,27,98,1,0,0,0,29,102,1,0,0,0,
        31,107,1,0,0,0,33,113,1,0,0,0,35,121,1,0,0,0,37,130,1,0,0,0,39,135,
        1,0,0,0,41,161,1,0,0,0,43,164,1,0,0,0,45,169,1,0,0,0,47,179,1,0,
        0,0,49,192,1,0,0,0,51,195,1,0,0,0,53,199,1,0,0,0,55,206,1,0,0,0,
        57,212,1,0,0,0,59,233,1,0,0,0,61,235,1,0,0,0,63,245,1,0,0,0,65,66,
        5,47,0,0,66,2,1,0,0,0,67,68,5,47,0,0,68,69,5,47,0,0,69,4,1,0,0,0,
        70,71,5,42,0,0,71,6,1,0,0,0,72,73,5,37,0,0,73,8,1,0,0,0,74,75,5,
        43,0,0,75,10,1,0,0,0,76,77,5,45,0,0,77,12,1,0,0,0,78,79,5,94,0,0,
        79,14,1,0,0,0,80,81,5,40,0,0,81,16,1,0,0,0,82,83,5,41,0,0,83,18,
        1,0,0,0,84,85,5,115,0,0,85,86,5,116,0,0,86,87,5,100,0,0,87,88,5,
        105,0,0,88,89,5,110,0,0,89,20,1,0,0,0,90,91,5,44,0,0,91,22,1,0,0,
        0,92,93,5,186,0,0,93,24,1,0,0,0,94,95,5,100,0,0,95,96,5,101,0,0,
        96,97,5,103,0,0,97,26,1,0,0,0,98,99,5,114,0,0,99,100,5,97,0,0,100,
        101,5,100,0,0,101,28,1,0,0,0,102,103,5,108,0,0,103,104,5,101,0,0,
        104,105,5,102,0,0,105,106,5,116,0,0,106,30,1,0,0,0,107,108,5,114,
        0,0,108,109,5,105,0,0,109,110,5,103,0,0,110,111,5,104,0,0,111,112,
        5,116,0,0,112,32,1,0,0,0,113,114,5,102,0,0,114,115,5,111,0,0,115,
        116,5,114,0,0,116,117,5,119,0,0,117,118,5,97,0,0,118,119,5,114,0,
        0,119,120,5,100,0,0,120,34,1,0,0,0,121,122,5,98,0,0,122,123,5,97,
        0,0,123,124,5,99,0,0,124,125,5,107,0,0,125,126,5,119,0,0,126,127,
        5,97,0,0,127,128,5,114,0,0,128,129,5,100,0,0,129,36,1,0,0,0,130,
        131,5,100,0,0,131,132,5,111,0,0,132,133,5,119,0,0,133,134,5,110,
        0,0,134,38,1,0,0,0,135,136,5,117,0,0,136,137,5,112,0,0,137,40,1,
        0,0,0,138,139,5,114,0,0,139,140,5,101,0,0,140,141,5,97,0,0,141,162,
        5,108,0,0,142,143,5,99,0,0,143,144,5,97,0,0,144,145,5,110,0,0,145,
        146,5,118,0,0,146,147,5,97,0,0,147,162,5,115,0,0,148,149,5,105,0,
        0,149,150,5,110,0,0,150,162,5,116,0,0,151,152,5,115,0,0,152,153,
        5,116,0,0,153,154,5,114,0,0,154,155,5,105,0,0,155,156,5,110,0,0,
        156,162,5,103,0,0,157,158,5,98,0,0,158,159,5,111,0,0,159,160,5,111,
        0,0,160,162,5,108,0,0,161,138,1,0,0,0,161,142,1,0,0,0,161,148,1,
        0,0,0,161,151,1,0,0,0,161,157,1,0,0,0,162,42,1,0,0,0,163,165,7,0,
        0,0,164,163,1,0,0,0,165,166,1,0,0,0,166,164,1,0,0,0,166,167,1,0,
        0,0,167,44,1,0,0,0,168,170,7,0,0,0,169,168,1,0,0,0,170,171,1,0,0,
        0,171,169,1,0,0,0,171,172,1,0,0,0,172,173,1,0,0,0,173,175,5,46,0,
        0,174,176,7,0,0,0,175,174,1,0,0,0,176,177,1,0,0,0,177,175,1,0,0,
        0,177,178,1,0,0,0,178,46,1,0,0,0,179,180,3,43,21,0,180,181,5,47,
        0,0,181,182,3,43,21,0,182,48,1,0,0,0,183,184,5,116,0,0,184,185,5,
        114,0,0,185,186,5,117,0,0,186,193,5,101,0,0,187,188,5,102,0,0,188,
        189,5,97,0,0,189,190,5,108,0,0,190,191,5,115,0,0,191,193,5,101,0,
        0,192,183,1,0,0,0,192,187,1,0,0,0,193,50,1,0,0,0,194,196,7,1,0,0,
        195,194,1,0,0,0,196,197,1,0,0,0,197,195,1,0,0,0,197,198,1,0,0,0,
        198,52,1,0,0,0,199,203,3,51,25,0,200,202,7,2,0,0,201,200,1,0,0,0,
        202,205,1,0,0,0,203,201,1,0,0,0,203,204,1,0,0,0,204,54,1,0,0,0,205,
        203,1,0,0,0,206,208,5,35,0,0,207,209,7,3,0,0,208,207,1,0,0,0,209,
        210,1,0,0,0,210,208,1,0,0,0,210,211,1,0,0,0,211,56,1,0,0,0,212,213,
        5,92,0,0,213,214,9,0,0,0,214,58,1,0,0,0,215,220,5,34,0,0,216,219,
        9,0,0,0,217,219,3,57,28,0,218,216,1,0,0,0,218,217,1,0,0,0,219,222,
        1,0,0,0,220,221,1,0,0,0,220,218,1,0,0,0,221,223,1,0,0,0,222,220,
        1,0,0,0,223,234,5,34,0,0,224,229,5,39,0,0,225,228,9,0,0,0,226,228,
        3,57,28,0,227,225,1,0,0,0,227,226,1,0,0,0,228,231,1,0,0,0,229,230,
        1,0,0,0,229,227,1,0,0,0,230,232,1,0,0,0,231,229,1,0,0,0,232,234,
        5,39,0,0,233,215,1,0,0,0,233,224,1,0,0,0,234,60,1,0,0,0,235,239,
        5,37,0,0,236,238,8,4,0,0,237,236,1,0,0,0,238,241,1,0,0,0,239,237,
        1,0,0,0,239,240,1,0,0,0,240,242,1,0,0,0,241,239,1,0,0,0,242,243,
        6,30,0,0,243,62,1,0,0,0,244,246,7,5,0,0,245,244,1,0,0,0,246,247,
        1,0,0,0,247,245,1,0,0,0,247,248,1,0,0,0,248,249,1,0,0,0,249,250,
        6,31,0,0,250,64,1,0,0,0,16,0,161,166,171,177,192,197,203,210,218,
        220,227,229,233,239,247,1,6,0,0
    ]

class ElementsLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    Type = 21
    INT = 22
    FLOAT = 23
    FRACTION = 24
    BOOL = 25
    Word = 26
    Name = 27
    HexaColor = 28
    ESC = 29
    STRING = 30
    Comment = 31
    WS = 32

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'/'", "'//'", "'*'", "'%'", "'+'", "'-'", "'^'", "'('", "')'", 
            "'stdin'", "','", "'\\u00BA'", "'deg'", "'rad'", "'left'", "'right'", 
            "'forward'", "'backward'", "'down'", "'up'" ]

    symbolicNames = [ "<INVALID>",
            "Type", "INT", "FLOAT", "FRACTION", "BOOL", "Word", "Name", 
            "HexaColor", "ESC", "STRING", "Comment", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "Type", "INT", "FLOAT", "FRACTION", "BOOL", "Word", "Name", 
                  "HexaColor", "ESC", "STRING", "Comment", "WS" ]

    grammarFileName = "Elements.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


